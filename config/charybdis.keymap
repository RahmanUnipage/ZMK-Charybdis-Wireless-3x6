#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 200

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
        input-processors = <&zip_xy_scaler 1 2>, <&zip_temp_layer 4 400>;

        // Switch to auto-mouse temp layer, decrease sensitivity

        scroll {
            layers = <5>; // SCROLL
            input-processors =
                <&zip_xy_scaler 1 5>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB                        &kp Q  &kp W  &kp E         &kp R      &kp T          &kp Y      &kp U          &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&mt LEFT_SHIFT LA(LEFT_SHIFT)  &kp A  &kp S  &kp D         &kp F      &kp G          &kp H      &kp J          &kp K      &kp L    &kp SEMICOLON  &kp APOSTROPHE
&kp LEFT_CONTROL               &kp Z  &kp X  &kp C         &kp V      &kp B          &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_BRACKET
                                             &kp LEFT_WIN  &mkp LCLK  &lt 1 SPACE    &kp ENTER  &kp BACKSPACE
            >;
        };

        NAV {
            bindings = <
&kp LA(LEFT_CONTROL)  &trans  &kp ESCAPE  &trans          &msc MOVE_Y(20)   &mkp MCLK    &kp N7     &kp N8        &kp N9        &kp N0            &kp TILDE          &kp BACKSPACE
&kp LEFT_SHIFT        &trans  &trans      &kp UP          &msc MOVE_Y(-20)  &mkp MB4     &kp N4     &kp N5        &kp NUMBER_6  &kp MINUS         &kp PLUS           &kp EQUAL
&kp LEFT_CONTROL      &trans  &kp LEFT    &kp DOWN_ARROW  &kp RIGHT_ARROW   &mkp MB5     &kp N1     &kp N2        &kp N3        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &to 2
                                          &trans          &trans            &trans       &kp SPACE  &kp NUMBER_0
            >;
        };

        GAME {
            bindings = <
&kp NUMBER_1  &kp TAB           &kp Q  &kp W         &kp E      &kp R      &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_2  &kp LEFT_SHIFT    &kp A  &kp S         &kp D      &kp F      &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_3  &kp LEFT_CONTROL  &kp Z  &kp X         &kp C      &kp V      &trans  &trans  &trans  &trans  &trans  &to 0
                                       &kp LEFT_ALT  &kp SPACE  &kp RET    &trans  &trans
            >;
        };
    };
};
